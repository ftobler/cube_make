
# Makefile generated by eclipse_to_make

PROJECT_NAME = stm32_project

# Source files
C_SOURCES = Core/Src/main.c \
    Core/Src/stm32g0xx_hal_msp.c \
    Core/Src/stm32g0xx_it.c \
    Core/Src/syscalls.c \
    Core/Src/sysmem.c \
    Core/Src/system_stm32g0xx.c \
    Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c \
    Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_cortex.c \
    Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c \
    Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c \
    Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_exti.c \
    Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_flash.c \
    Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_flash_ex.c \
    Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_gpio.c \
    Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_pwr.c \
    Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_pwr_ex.c \
    Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc.c \
    Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c \
    Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_rcc.c \
    application/app.c
CPP_SOURCES = application/test.cpp
S_SOURCES = Core/Startup/startup_stm32g030k8tx.s

# Include paths
C_INCLUDES = Core/Inc \
    Drivers/CMSIS/Device/ST/STM32G0xx/Include \
    Drivers/CMSIS/Include \
    Drivers/STM32G0xx_HAL_Driver/Inc \
    Drivers/STM32G0xx_HAL_Driver/Inc/Legacy \
    application

# Defines
C_DEFINES = DEBUG \
    STM32G030xx \
    USE_HAL_DRIVER

# Linker script
LD_SCRIPT = STM32G030K8TX_FLASH.ld

# Toolchain
CC = arm-none-eabi-gcc
CXX = arm-none-eabi-g++
AS = arm-none-eabi-as
LD = arm-none-eabi-gcc
AR = arm-none-eabi-ar
OBJCOPY = arm-none-eabi-objcopy
OBJDUMP = arm-none-eabi-objdump
SIZE = arm-none-eabi-size

# Flags
CFLAGS = -mcpu=cortex-m0plus -mthumb
CXXFLAGS = -mcpu=cortex-m0plus -mthumb
ASFLAGS = -mcpu=cortex-m0plus -mthumb
LDFLAGS = -T$(LD_SCRIPT) -mcpu=cortex-m0plus -mthumb

# Output directories
BUILD_DIR = build

# Object files
C_OBJECTS = $(patsubst %.c,$(BUILD_DIR)/%.o,$(notdir $(C_SOURCES)))
CPP_OBJECTS = $(patsubst %.cpp,$(BUILD_DIR)/%.o,$(notdir $(CPP_SOURCES)))
S_OBJECTS = $(patsubst %.s,$(BUILD_DIR)/%.o,$(notdir $(S_SOURCES)))

OBJECTS = $(C_OBJECTS) $(CPP_OBJECTS) $(S_OBJECTS)

I_C_INCLUDES = $(patsubst %, -I%, $(C_INCLUDES))
I_C_DEFINES = $(patsubst %, -D%, $(C_DEFINES))

.PHONY: all clean

all: $(BUILD_DIR)/$(PROJECT_NAME).elf

$(BUILD_DIR)/$(PROJECT_NAME).elf: $(OBJECTS)
	@mkdir -p $(@D)
	$(LD) $(LDFLAGS) $(OBJECTS) -o $@
	$(SIZE) $@

$(BUILD_DIR)/%.o: application/%.c
	@mkdir -p $(@D)
	$(CC) $(CFLAGS) $(I_C_INCLUDES) $(I_C_DEFINES) -c $< -o $@

$(BUILD_DIR)/%.o: Core/Src/%.c
	@mkdir -p $(@D)
	$(CC) $(CFLAGS) $(I_C_INCLUDES) $(I_C_DEFINES) -c $< -o $@

$(BUILD_DIR)/%.o: Drivers/STM32G0xx_HAL_Driver/Src/%.c
	@mkdir -p $(@D)
	$(CC) $(CFLAGS) $(I_C_INCLUDES) $(I_C_DEFINES) -c $< -o $@

$(BUILD_DIR)/%.o: application/%.cpp
	@mkdir -p $(@D)
	$(CXX) $(CXXFLAGS) $(I_C_INCLUDES) $(I_C_DEFINES) -c $< -o $@

$(BUILD_DIR)/%.o: Core/Startup/%.s
	@mkdir -p $(@D)
	$(AS) $(ASFLAGS) $< -o $@

clean:
	rm -rf $(BUILD_DIR)

