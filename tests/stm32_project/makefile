
# Makefile generated by eclipse_to_make

PROJECT_NAME = stm32_project

# Source files
C_SOURCES = app.c main.c stm32g0xx_hal.c stm32g0xx_hal_cortex.c stm32g0xx_hal_dma.c stm32g0xx_hal_dma_ex.c stm32g0xx_hal_exti.c stm32g0xx_hal_flash.c stm32g0xx_hal_flash_ex.c stm32g0xx_hal_gpio.c stm32g0xx_hal_msp.c stm32g0xx_hal_pwr.c stm32g0xx_hal_pwr_ex.c stm32g0xx_hal_rcc.c stm32g0xx_hal_rcc_ex.c stm32g0xx_it.c stm32g0xx_ll_rcc.c syscalls.c sysmem.c system_stm32g0xx.c
CPP_SOURCES = test.cpp
S_SOURCES = startup_stm32g030k8tx.s

# VPATH for source directories
VPATH = Core/Startup

# Include paths
C_INCLUDES = -ICore/Inc -IDrivers/CMSIS/Device/ST/STM32G0xx/Include -IDrivers/CMSIS/Include -IDrivers/STM32G0xx_HAL_Driver/Inc -IDrivers/STM32G0xx_HAL_Driver/Inc/Legacy -Iapplication

# Defines
C_DEFINES = -DDEBUG -DSTM32G030xx -DUSE_HAL_DRIVER

# Linker script
LD_SCRIPT = STM32G030K8TX_FLASH.ld

# Toolchain
CC = arm-none-eabi-gcc
CXX = arm-none-eabi-g++
AS = arm-none-eabi-as
LD = arm-none-eabi-gcc
AR = arm-none-eabi-ar
OBJCOPY = arm-none-eabi-objcopy
OBJDUMP = arm-none-eabi-objdump
SIZE = arm-none-eabi-size

# Flags
CFLAGS = -mcpu=cortex-m0plus -mthumb
CXXFLAGS = -mcpu=cortex-m0plus -mthumb
ASFLAGS = -mcpu=cortex-m0plus -mthumb
LDFLAGS = -T$(LD_SCRIPT) -mcpu=cortex-m0plus -mthumb

# Output directories
BUILD_DIR = build

# Object files
C_OBJECTS = $(patsubst %.c,$(BUILD_DIR)/%.o,$(C_SOURCES))
CPP_OBJECTS = $(patsubst %.cpp,$(BUILD_DIR)/%.o,$(CPP_SOURCES))
S_OBJECTS = $(patsubst %.s,$(BUILD_DIR)/%.o,$(S_SOURCES))

OBJECTS = $(C_OBJECTS) $(CPP_OBJECTS) $(S_OBJECTS)

.PHONY: all clean

all: $(BUILD_DIR)/$(PROJECT_NAME).elf

$(BUILD_DIR)/$(PROJECT_NAME).elf: $(OBJECTS)
	@mkdir -p $(@D)
	$(LD) $(LDFLAGS) $(OBJECTS) -o $@
	$(SIZE) $@

$(BUILD_DIR)/%.o: $(patsubst $(BUILD_DIR)/%.o,%.c,$@)
	@mkdir -p $(@D)
	$(CC) $(CFLAGS) $(C_INCLUDES) $(C_DEFINES) -c $< -o $@

$(BUILD_DIR)/%.o: $(patsubst $(BUILD_DIR)/%.o,%.cpp,$@)
	@mkdir -p $(@D)
	$(CXX) $(CXXFLAGS) $(C_INCLUDES) $(C_DEFINES) -c $< -o $@

$(BUILD_DIR)/%.o: $(patsubst $(BUILD_DIR)/%.o,%.s,$@)
	@mkdir -p $(@D)
	$(AS) $(ASFLAGS) $< -o $@

clean:
	rm -rf $(BUILD_DIR)

